//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SpeechApp.PhoneServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Voices", Namespace="http://schemas.datacontract.org/2004/07/PhoneService")]
    public partial class Voices : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string VoiceField;
        
        private int VoiceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Voice {
            get {
                return this.VoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.VoiceField, value) != true)) {
                    this.VoiceField = value;
                    this.RaisePropertyChanged("Voice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoiceID {
            get {
                return this.VoiceIDField;
            }
            set {
                if ((this.VoiceIDField.Equals(value) != true)) {
                    this.VoiceIDField = value;
                    this.RaisePropertyChanged("VoiceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileContentNew", Namespace="http://schemas.datacontract.org/2004/07/PhoneService")]
    public partial class FileContentNew : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContentField;
        
        private int FileContenetIDField;
        
        private string OutFileField;
        
        private string VoiceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileContenetID {
            get {
                return this.FileContenetIDField;
            }
            set {
                if ((this.FileContenetIDField.Equals(value) != true)) {
                    this.FileContenetIDField = value;
                    this.RaisePropertyChanged("FileContenetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutFile {
            get {
                return this.OutFileField;
            }
            set {
                if ((object.ReferenceEquals(this.OutFileField, value) != true)) {
                    this.OutFileField = value;
                    this.RaisePropertyChanged("OutFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Voice {
            get {
                return this.VoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.VoiceField, value) != true)) {
                    this.VoiceField = value;
                    this.RaisePropertyChanged("Voice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileContentColl", Namespace="http://schemas.datacontract.org/2004/07/PhoneService")]
    public partial class FileContentColl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContentTitleField;
        
        private System.DateTime CreatedDatetimeField;
        
        private string DownloadField;
        
        private string FilepathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentTitle {
            get {
                return this.ContentTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTitleField, value) != true)) {
                    this.ContentTitleField = value;
                    this.RaisePropertyChanged("ContentTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDatetime {
            get {
                return this.CreatedDatetimeField;
            }
            set {
                if ((this.CreatedDatetimeField.Equals(value) != true)) {
                    this.CreatedDatetimeField = value;
                    this.RaisePropertyChanged("CreatedDatetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Download {
            get {
                return this.DownloadField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadField, value) != true)) {
                    this.DownloadField = value;
                    this.RaisePropertyChanged("Download");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filepath {
            get {
                return this.FilepathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilepathField, value) != true)) {
                    this.FilepathField = value;
                    this.RaisePropertyChanged("Filepath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileContentForInsert", Namespace="http://schemas.datacontract.org/2004/07/PhoneService")]
    public partial class FileContentForInsert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string contentField;
        
        private string fileField;
        
        private int speechRateField;
        
        private string titleField;
        
        private string urlField;
        
        private string userIDField;
        
        private int voiceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string file {
            get {
                return this.fileField;
            }
            set {
                if ((object.ReferenceEquals(this.fileField, value) != true)) {
                    this.fileField = value;
                    this.RaisePropertyChanged("file");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int speechRate {
            get {
                return this.speechRateField;
            }
            set {
                if ((this.speechRateField.Equals(value) != true)) {
                    this.speechRateField = value;
                    this.RaisePropertyChanged("speechRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                if ((object.ReferenceEquals(this.userIDField, value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int voiceID {
            get {
                return this.voiceIDField;
            }
            set {
                if ((this.voiceIDField.Equals(value) != true)) {
                    this.voiceIDField = value;
                    this.RaisePropertyChanged("voiceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhoneServiceRef.IPhoneSvc")]
    public interface IPhoneSvc {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/GetData", ReplyAction="http://tempuri.org/IPhoneSvc/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/GetVoices", ReplyAction="http://tempuri.org/IPhoneSvc/GetVoicesResponse")]
        System.IAsyncResult BeginGetVoices(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> EndGetVoices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/GetFileContentNew", ReplyAction="http://tempuri.org/IPhoneSvc/GetFileContentNewResponse")]
        System.IAsyncResult BeginGetFileContentNew(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> EndGetFileContentNew(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/FileContentUpdateStatus", ReplyAction="http://tempuri.org/IPhoneSvc/FileContentUpdateStatusResponse")]
        System.IAsyncResult BeginFileContentUpdateStatus(string status, int fileContenetID, System.AsyncCallback callback, object asyncState);
        
        string EndFileContentUpdateStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/FileContentMyCollSelectAll", ReplyAction="http://tempuri.org/IPhoneSvc/FileContentMyCollSelectAllResponse")]
        System.IAsyncResult BeginFileContentMyCollSelectAll(string userID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> EndFileContentMyCollSelectAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhoneSvc/FileContentInsert", ReplyAction="http://tempuri.org/IPhoneSvc/FileContentInsertResponse")]
        System.IAsyncResult BeginFileContentInsert(SpeechApp.PhoneServiceRef.FileContentForInsert fileContent, System.AsyncCallback callback, object asyncState);
        
        string EndFileContentInsert(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhoneSvcChannel : SpeechApp.PhoneServiceRef.IPhoneSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileContentNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileContentNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileContentUpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileContentUpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileContentMyCollSelectAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileContentMyCollSelectAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileContentInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileContentInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhoneSvcClient : System.ServiceModel.ClientBase<SpeechApp.PhoneServiceRef.IPhoneSvc>, SpeechApp.PhoneServiceRef.IPhoneSvc {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVoicesDelegate;
        
        private EndOperationDelegate onEndGetVoicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetVoicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileContentNewDelegate;
        
        private EndOperationDelegate onEndGetFileContentNewDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileContentNewCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileContentUpdateStatusDelegate;
        
        private EndOperationDelegate onEndFileContentUpdateStatusDelegate;
        
        private System.Threading.SendOrPostCallback onFileContentUpdateStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileContentMyCollSelectAllDelegate;
        
        private EndOperationDelegate onEndFileContentMyCollSelectAllDelegate;
        
        private System.Threading.SendOrPostCallback onFileContentMyCollSelectAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileContentInsertDelegate;
        
        private EndOperationDelegate onEndFileContentInsertDelegate;
        
        private System.Threading.SendOrPostCallback onFileContentInsertCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhoneSvcClient() {
        }
        
        public PhoneSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhoneSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhoneSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetVoicesCompletedEventArgs> GetVoicesCompleted;
        
        public event System.EventHandler<GetFileContentNewCompletedEventArgs> GetFileContentNewCompleted;
        
        public event System.EventHandler<FileContentUpdateStatusCompletedEventArgs> FileContentUpdateStatusCompleted;
        
        public event System.EventHandler<FileContentMyCollSelectAllCompletedEventArgs> FileContentMyCollSelectAllCompleted;
        
        public event System.EventHandler<FileContentInsertCompletedEventArgs> FileContentInsertCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SpeechApp.PhoneServiceRef.IPhoneSvc.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginGetVoices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVoices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> SpeechApp.PhoneServiceRef.IPhoneSvc.EndGetVoices(System.IAsyncResult result) {
            return base.Channel.EndGetVoices(result);
        }
        
        private System.IAsyncResult OnBeginGetVoices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginGetVoices(callback, asyncState);
        }
        
        private object[] OnEndGetVoices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndGetVoices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVoicesCompleted(object state) {
            if ((this.GetVoicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVoicesCompleted(this, new GetVoicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVoicesAsync() {
            this.GetVoicesAsync(null);
        }
        
        public void GetVoicesAsync(object userState) {
            if ((this.onBeginGetVoicesDelegate == null)) {
                this.onBeginGetVoicesDelegate = new BeginOperationDelegate(this.OnBeginGetVoices);
            }
            if ((this.onEndGetVoicesDelegate == null)) {
                this.onEndGetVoicesDelegate = new EndOperationDelegate(this.OnEndGetVoices);
            }
            if ((this.onGetVoicesCompletedDelegate == null)) {
                this.onGetVoicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVoicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetVoicesDelegate, null, this.onEndGetVoicesDelegate, this.onGetVoicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginGetFileContentNew(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileContentNew(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> SpeechApp.PhoneServiceRef.IPhoneSvc.EndGetFileContentNew(System.IAsyncResult result) {
            return base.Channel.EndGetFileContentNew(result);
        }
        
        private System.IAsyncResult OnBeginGetFileContentNew(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginGetFileContentNew(callback, asyncState);
        }
        
        private object[] OnEndGetFileContentNew(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndGetFileContentNew(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileContentNewCompleted(object state) {
            if ((this.GetFileContentNewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileContentNewCompleted(this, new GetFileContentNewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileContentNewAsync() {
            this.GetFileContentNewAsync(null);
        }
        
        public void GetFileContentNewAsync(object userState) {
            if ((this.onBeginGetFileContentNewDelegate == null)) {
                this.onBeginGetFileContentNewDelegate = new BeginOperationDelegate(this.OnBeginGetFileContentNew);
            }
            if ((this.onEndGetFileContentNewDelegate == null)) {
                this.onEndGetFileContentNewDelegate = new EndOperationDelegate(this.OnEndGetFileContentNew);
            }
            if ((this.onGetFileContentNewCompletedDelegate == null)) {
                this.onGetFileContentNewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileContentNewCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileContentNewDelegate, null, this.onEndGetFileContentNewDelegate, this.onGetFileContentNewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginFileContentUpdateStatus(string status, int fileContenetID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileContentUpdateStatus(status, fileContenetID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SpeechApp.PhoneServiceRef.IPhoneSvc.EndFileContentUpdateStatus(System.IAsyncResult result) {
            return base.Channel.EndFileContentUpdateStatus(result);
        }
        
        private System.IAsyncResult OnBeginFileContentUpdateStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string status = ((string)(inValues[0]));
            int fileContenetID = ((int)(inValues[1]));
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginFileContentUpdateStatus(status, fileContenetID, callback, asyncState);
        }
        
        private object[] OnEndFileContentUpdateStatus(System.IAsyncResult result) {
            string retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndFileContentUpdateStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileContentUpdateStatusCompleted(object state) {
            if ((this.FileContentUpdateStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileContentUpdateStatusCompleted(this, new FileContentUpdateStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileContentUpdateStatusAsync(string status, int fileContenetID) {
            this.FileContentUpdateStatusAsync(status, fileContenetID, null);
        }
        
        public void FileContentUpdateStatusAsync(string status, int fileContenetID, object userState) {
            if ((this.onBeginFileContentUpdateStatusDelegate == null)) {
                this.onBeginFileContentUpdateStatusDelegate = new BeginOperationDelegate(this.OnBeginFileContentUpdateStatus);
            }
            if ((this.onEndFileContentUpdateStatusDelegate == null)) {
                this.onEndFileContentUpdateStatusDelegate = new EndOperationDelegate(this.OnEndFileContentUpdateStatus);
            }
            if ((this.onFileContentUpdateStatusCompletedDelegate == null)) {
                this.onFileContentUpdateStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileContentUpdateStatusCompleted);
            }
            base.InvokeAsync(this.onBeginFileContentUpdateStatusDelegate, new object[] {
                        status,
                        fileContenetID}, this.onEndFileContentUpdateStatusDelegate, this.onFileContentUpdateStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginFileContentMyCollSelectAll(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileContentMyCollSelectAll(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> SpeechApp.PhoneServiceRef.IPhoneSvc.EndFileContentMyCollSelectAll(System.IAsyncResult result) {
            return base.Channel.EndFileContentMyCollSelectAll(result);
        }
        
        private System.IAsyncResult OnBeginFileContentMyCollSelectAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginFileContentMyCollSelectAll(userID, callback, asyncState);
        }
        
        private object[] OnEndFileContentMyCollSelectAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndFileContentMyCollSelectAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileContentMyCollSelectAllCompleted(object state) {
            if ((this.FileContentMyCollSelectAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileContentMyCollSelectAllCompleted(this, new FileContentMyCollSelectAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileContentMyCollSelectAllAsync(string userID) {
            this.FileContentMyCollSelectAllAsync(userID, null);
        }
        
        public void FileContentMyCollSelectAllAsync(string userID, object userState) {
            if ((this.onBeginFileContentMyCollSelectAllDelegate == null)) {
                this.onBeginFileContentMyCollSelectAllDelegate = new BeginOperationDelegate(this.OnBeginFileContentMyCollSelectAll);
            }
            if ((this.onEndFileContentMyCollSelectAllDelegate == null)) {
                this.onEndFileContentMyCollSelectAllDelegate = new EndOperationDelegate(this.OnEndFileContentMyCollSelectAll);
            }
            if ((this.onFileContentMyCollSelectAllCompletedDelegate == null)) {
                this.onFileContentMyCollSelectAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileContentMyCollSelectAllCompleted);
            }
            base.InvokeAsync(this.onBeginFileContentMyCollSelectAllDelegate, new object[] {
                        userID}, this.onEndFileContentMyCollSelectAllDelegate, this.onFileContentMyCollSelectAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SpeechApp.PhoneServiceRef.IPhoneSvc.BeginFileContentInsert(SpeechApp.PhoneServiceRef.FileContentForInsert fileContent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileContentInsert(fileContent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SpeechApp.PhoneServiceRef.IPhoneSvc.EndFileContentInsert(System.IAsyncResult result) {
            return base.Channel.EndFileContentInsert(result);
        }
        
        private System.IAsyncResult OnBeginFileContentInsert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SpeechApp.PhoneServiceRef.FileContentForInsert fileContent = ((SpeechApp.PhoneServiceRef.FileContentForInsert)(inValues[0]));
            return ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).BeginFileContentInsert(fileContent, callback, asyncState);
        }
        
        private object[] OnEndFileContentInsert(System.IAsyncResult result) {
            string retVal = ((SpeechApp.PhoneServiceRef.IPhoneSvc)(this)).EndFileContentInsert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileContentInsertCompleted(object state) {
            if ((this.FileContentInsertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileContentInsertCompleted(this, new FileContentInsertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileContentInsertAsync(SpeechApp.PhoneServiceRef.FileContentForInsert fileContent) {
            this.FileContentInsertAsync(fileContent, null);
        }
        
        public void FileContentInsertAsync(SpeechApp.PhoneServiceRef.FileContentForInsert fileContent, object userState) {
            if ((this.onBeginFileContentInsertDelegate == null)) {
                this.onBeginFileContentInsertDelegate = new BeginOperationDelegate(this.OnBeginFileContentInsert);
            }
            if ((this.onEndFileContentInsertDelegate == null)) {
                this.onEndFileContentInsertDelegate = new EndOperationDelegate(this.OnEndFileContentInsert);
            }
            if ((this.onFileContentInsertCompletedDelegate == null)) {
                this.onFileContentInsertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileContentInsertCompleted);
            }
            base.InvokeAsync(this.onBeginFileContentInsertDelegate, new object[] {
                        fileContent}, this.onEndFileContentInsertDelegate, this.onFileContentInsertCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SpeechApp.PhoneServiceRef.IPhoneSvc CreateChannel() {
            return new PhoneSvcClientChannel(this);
        }
        
        private class PhoneSvcClientChannel : ChannelBase<SpeechApp.PhoneServiceRef.IPhoneSvc>, SpeechApp.PhoneServiceRef.IPhoneSvc {
            
            public PhoneSvcClientChannel(System.ServiceModel.ClientBase<SpeechApp.PhoneServiceRef.IPhoneSvc> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVoices(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVoices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> EndGetVoices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices> _result = ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.Voices>)(base.EndInvoke("GetVoices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFileContentNew(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFileContentNew", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> EndGetFileContentNew(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew> _result = ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentNew>)(base.EndInvoke("GetFileContentNew", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFileContentUpdateStatus(string status, int fileContenetID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = status;
                _args[1] = fileContenetID;
                System.IAsyncResult _result = base.BeginInvoke("FileContentUpdateStatus", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFileContentUpdateStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FileContentUpdateStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFileContentMyCollSelectAll(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("FileContentMyCollSelectAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> EndFileContentMyCollSelectAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl> _result = ((System.Collections.ObjectModel.ObservableCollection<SpeechApp.PhoneServiceRef.FileContentColl>)(base.EndInvoke("FileContentMyCollSelectAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFileContentInsert(SpeechApp.PhoneServiceRef.FileContentForInsert fileContent, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileContent;
                System.IAsyncResult _result = base.BeginInvoke("FileContentInsert", _args, callback, asyncState);
                return _result;
            }
            
            public string EndFileContentInsert(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("FileContentInsert", _args, result)));
                return _result;
            }
        }
    }
}
